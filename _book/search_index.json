[
["basicr.html", "Bagian 3 Dasar Pemrograman R 3.1 Assignment 3.2 Penamaan Objek 3.3 Vector 3.4 Matriks 3.5 Array 3.6 Data.frame 3.7 List 3.8 Function dan Packages 3.9 Latihan", " Bagian 3 Dasar Pemrograman R Hal yang paling sederhana yang dapat dilakukan R adalah sebagai kalkulator. Coba Anda ketikan perintah di bawah ini pada console R dan tekan tombol Enter setelah selesai. 2 + 4 Akan muncul hasil [1] 6. Hasil [1] menunjukkan bahwa yang ditampilkan adalah dari elemen pertama. Hal ini akan dibahas di bagian 3.3. Tanda &gt; adalah prompt yang menunjukkan bahwa R sedang dalam posisi siap menerima perintah baru. Jika perintah belum lengkap maka akan berganti menjadi tanda +. Artinya ada perintah atau bagian script yang belum selesai. &gt; 2 + + | Perhatikan setelah Anda tekan tombol Enter maka kursor di R yang sebelumnya &gt; berganti + yang menandakan bahwa perintah belum lengkap. Maka jika Anda kembali menuliskan bilangan lain, misalkan 4 dan tekan tombol Enter maka prompt di R akan kembali menjadi &gt; setelah menuliskan hasilnya karena perintah sudah lengkap dan selesai. print(&quot;Hello World!&quot;) ## [1] &quot;Hello World!&quot; R adalah bahasa pemrograman yang case-sensitive. Artinya perbedaan huruf kapital dan huruf kecil sangat berpengaruh. Karena R adalah bahasa pemrograman yang Case Sensitive, jadi untuk penulisan nama objek atau nilai berupa karakter sangat tergantung dari kapitalisasinya. a &lt;- 3 a ## [1] 3 A ## Error: object &#39;A&#39; not found 3.1 Assignment Operator assignment di R sedikit berbeda dengan bahasa pemrograman pada umumnya. Hampir semua bahasa pemrograman lain menggunakan tanda = sebagai operator assignment. R menggunakan &lt;- sebagai assignment operator. Namun, R juga dapat menggunakan tanda = sebagai operator assignment. x &lt;- 5 x ## [1] 5 Table 3.1: Operator Assignment Operator Cakupan Penjelasan &lt;- lokal/global nilai dari sebelah kanan dimasukkan ke dalam objek di sebelah kiri. -&gt; lokal/global nilai dari sebelah kiri dimasukkan ke dalam objek di sebelah kanan. &lt;&lt;- global nilai dari sebelah kanan dimasukkan ke dalam objek global di sebelah kiri. -&gt;&gt; global nilai dari sebelah kiri dimasukkan ke dalam objek global di sebelah kanan. x &lt;- 5 x ## [1] 5 X &lt;- 4 X ## [1] 4 x &lt;- 8 x ## [1] 8 Ketika menggunakan R, setiap yang ada di R disebut objek. Jenis-jenis objek dasar yang ada di R adalah vector, factor, matriks, array, data.frame, list dan function. 3.2 Penamaan Objek Aturan penamaan objek di R, seperti vector (3.3), matriks (3.4), data.frame (3.6) dan lain-lain, hampir sama dengan aturan penamaan pada bahasa pemrograman lain. Namun ada beberapa aturan khusus yang terdapat di R. Berikut aturan penamaan Menggunakan kombinasi alfabet (a-z, A-Z), angka (0-9) dan titik atau underscore. 3.3 Vector Vector adalah objek paling sederhana yang ada di dalam R. Secara umum jenis data terbagi 2, yaitu numeric dan character. Ada berbagai cara untuk membuat sebuah vector di R. Fungsi c() Fungsi yang paling sering digunakan untuk membuat sebuah vector adalah dengan menggunakan fungsi c(). x &lt;- c(2, 1, 5, 3, 1) x ## [1] 2 1 5 3 1 Pada script di atas, dibuat sebuah objek x berupa vector numeric. setiap elemen dipisah menggunakan tanda koma (,). Tanda titik dua/ colon (:) Untuk membuat sebuah vector numeric berurutan secara meningkat atau menurun. Lihat contoh berikut ini. x &lt;- 1:10 # 1 sampai 10 x ## [1] 1 2 3 4 5 6 7 8 9 10 Fungsi dari operator : pada contoh di atas adalah membuat vector numeric dengan nilai dari 1 s/d 10. Tentu saja operator increment ini hanya dapat digunakan untuk numerik dan meningkat sebesar 1 nilai. Operator ini dapat juga digunakan untuk membuat vector dengan nilai menurun. # membuat vector numeric dengan nilai dari 10 s/d -10 secara menurun 1 x &lt;- 10:-10 # 10 sampai -10 x ## [1] 10 9 8 7 6 5 4 3 2 1 0 -1 -2 -3 -4 -5 -6 -7 -8 ## [20] -9 -10 Fungsi seq() Fungsi ini dapat digunakan untuk membuat vector berurutan dan dengan increment tertentu. x &lt;- seq(from = 1, to = 10) # 1 sampai 10 dengan increment 1 (default by = 1) x ## [1] 1 2 3 4 5 6 7 8 9 10 Secara default increment dari fungsi seq() adalah by = 1. Jika Anda ingin nilai increment lain maka hanya perlu mengganti nilai pada argumen by. x &lt;- seq(from = 1, to = 20, by = 2) # 1 sampai 20 dengan increment 2 x ## [1] 1 3 5 7 9 11 13 15 17 19 x &lt;- seq(from = 1, to = 10, length.out = 7) # 1 sampai 10, sebanyak 7 elemen, increment mengikuti x ## [1] 1.0 2.5 4.0 5.5 7.0 8.5 10.0 x &lt;- seq(from = 1, to = 10, along.with = 1:4) # 1 sampai 10, sebanyak elemen dari vector lain x ## [1] 1 4 7 10 Mengambil satu kolom dari data.frame Mengambil sebuah kolom dari sebuah data.frame akan dibahas lebih jauh di bagian data.frame (3.6). Dengan menggunakan tanda dolar $ dan diikuti dengan nama kolom yang akan diambil dari data.frame tersebut. mtcars$mpg ## [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2 10.4 ## [16] 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4 15.8 19.7 ## [31] 15.0 21.4 Dari data.frame mtcars diambil kolom mpg Fungsi unlist() Fungsi ini berguna untuk menjadikan sebuah objek list menjadi sebuah vector. Pembahasan lebih lanjut akan dibahas di bagian 3.7. x &lt;- list(mtcars$mpg, mtcars$disp) x ## [[1]] ## [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2 10.4 ## [16] 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4 15.8 19.7 ## [31] 15.0 21.4 ## ## [[2]] ## [1] 160.0 160.0 108.0 258.0 360.0 225.0 360.0 146.7 140.8 167.6 167.6 275.8 ## [13] 275.8 275.8 472.0 460.0 440.0 78.7 75.7 71.1 120.1 318.0 304.0 350.0 ## [25] 400.0 79.0 120.3 95.1 351.0 145.0 301.0 121.0 x &lt;- unlist(x) x ## [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 ## [13] 17.3 15.2 10.4 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 ## [25] 19.2 27.3 26.0 30.4 15.8 19.7 15.0 21.4 160.0 160.0 108.0 258.0 ## [37] 360.0 225.0 360.0 146.7 140.8 167.6 167.6 275.8 275.8 275.8 472.0 460.0 ## [49] 440.0 78.7 75.7 71.1 120.1 318.0 304.0 350.0 400.0 79.0 120.3 95.1 ## [61] 351.0 145.0 301.0 121.0 Fungsi unlist() menggabungkan semua list menjadi sebuah vector. Catatan penting untuk vector: walaupun ditampilkan ke samping, dimensi vector di R sebenarnya ke bawah. Bayangkan untuk sebuah vector seperti satu kolom di Ms Excel. Semua contoh di atas untuk membuat vector adalah vector numeric. Vector numeric adalah vector yang semua elemennya bernilai dan bertipe numerik. 3.3.1 Vector Character Vector character adalah vector yang semua elemennya bertipe character. y &lt;- c(&quot;a&quot;, &quot;A&quot;, &quot;d&quot;, &quot;c&quot;) y ## [1] &quot;a&quot; &quot;A&quot; &quot;d&quot; &quot;c&quot; Jika ketika membuat sebuah vector bernilai numerik namun ada satu saja elemennya bertipe character maka semua elemennya akan bertipe character. c(1, 2, 3, 5, &quot;a&quot;) ## [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;5&quot; &quot;a&quot; Di R ada 2 buah vector khusus yang bertipe character, yaitu letters dan LETTERS. letters ## [1] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot; &quot;h&quot; &quot;i&quot; &quot;j&quot; &quot;k&quot; &quot;l&quot; &quot;m&quot; &quot;n&quot; &quot;o&quot; &quot;p&quot; &quot;q&quot; &quot;r&quot; &quot;s&quot; ## [20] &quot;t&quot; &quot;u&quot; &quot;v&quot; &quot;w&quot; &quot;x&quot; &quot;y&quot; &quot;z&quot; LETTERS ## [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot; &quot;F&quot; &quot;G&quot; &quot;H&quot; &quot;I&quot; &quot;J&quot; &quot;K&quot; &quot;L&quot; &quot;M&quot; &quot;N&quot; &quot;O&quot; &quot;P&quot; &quot;Q&quot; &quot;R&quot; &quot;S&quot; ## [20] &quot;T&quot; &quot;U&quot; &quot;V&quot; &quot;W&quot; &quot;X&quot; &quot;Y&quot; &quot;Z&quot; Dua buah vector atau lebih dapat digabungkan dengan fungsi c(). Namun, jika salah satu vector bertipe character, maka vector hasil gabungan akan menjadi vector character. c(x, y) ## [1] &quot;21&quot; &quot;21&quot; &quot;22.8&quot; &quot;21.4&quot; &quot;18.7&quot; &quot;18.1&quot; &quot;14.3&quot; &quot;24.4&quot; &quot;22.8&quot; ## [10] &quot;19.2&quot; &quot;17.8&quot; &quot;16.4&quot; &quot;17.3&quot; &quot;15.2&quot; &quot;10.4&quot; &quot;10.4&quot; &quot;14.7&quot; &quot;32.4&quot; ## [19] &quot;30.4&quot; &quot;33.9&quot; &quot;21.5&quot; &quot;15.5&quot; &quot;15.2&quot; &quot;13.3&quot; &quot;19.2&quot; &quot;27.3&quot; &quot;26&quot; ## [28] &quot;30.4&quot; &quot;15.8&quot; &quot;19.7&quot; &quot;15&quot; &quot;21.4&quot; &quot;160&quot; &quot;160&quot; &quot;108&quot; &quot;258&quot; ## [37] &quot;360&quot; &quot;225&quot; &quot;360&quot; &quot;146.7&quot; &quot;140.8&quot; &quot;167.6&quot; &quot;167.6&quot; &quot;275.8&quot; &quot;275.8&quot; ## [46] &quot;275.8&quot; &quot;472&quot; &quot;460&quot; &quot;440&quot; &quot;78.7&quot; &quot;75.7&quot; &quot;71.1&quot; &quot;120.1&quot; &quot;318&quot; ## [55] &quot;304&quot; &quot;350&quot; &quot;400&quot; &quot;79&quot; &quot;120.3&quot; &quot;95.1&quot; &quot;351&quot; &quot;145&quot; &quot;301&quot; ## [64] &quot;121&quot; &quot;a&quot; &quot;A&quot; &quot;d&quot; &quot;c&quot; 3.3.2 Factor Factor merupakan bentuk lebih luas dari vector. Biasanya factor lebih sering digunakan untuk menyimpan data nominal atau ordinal. Misalnya vector character yang berisi \"male\" dan \"female\". Pada vector character, nilainya adalah \"male\" dan \"female\" seperti terlihat apa adanya. Namun pada factor, tampilan dari isi datanya mungkin \"male\" dan \"female\" tetapi isi dari factor adalah pengkodean numerik. Misal untuk \"female\" nilai sebenarnya adalah 1, sedangkan \"male\" berniali 2. fc &lt;- factor(c(&quot;SD&quot;, &quot;SMA&quot;, &quot;SMP&quot;, &quot;SMP&quot;, &quot;SD&quot;, &quot;SMA&quot;, &quot;SD&quot;, &quot;SMP&quot;)) fc ## [1] SD SMA SMP SMP SD SMA SD SMP ## Levels: SD SMA SMP Nilai sebenarnya dari factor tersebut adalah print.default(fc) ## [1] 1 2 3 3 1 2 1 3 Factor mempunyai level, secara default levelnya adalah berdasarkan urutan alfabet. Untuk merubah level dari sebuah factor, gunakan argumen levels =. factor(fc, levels = c(&quot;SD&quot;, &quot;SMP&quot;, &quot;SMA&quot;)) ## [1] SD SMA SMP SMP SD SMA SD SMP ## Levels: SD SMP SMA 3.4 Matriks Matriks adalah objek di R yang memiliki 2 dimensi, baris (row) dan kolom (column), dan tipe nilainya sama. Jika ketika membuat sebuah matriks elemennya memiliki minimal 1 elemen bertipe character maka seluruh matriks tersebut akan bertipe character. Membuat matriks di R menggunakan vector yang dikonversi dimensinya. x &lt;- mtcars$mpg # vector length(x) ## [1] 32 Karena vector x memmiliki 64 elemen, maka dimensi matriks yang dapat dibuat adalah 2 angka yang hasil perkaliannya menghasilkan nilai 32. Salah satunya adalah 8 x 4 = 32. m &lt;- matrix(data = x, nrow = 8, ncol = 4, byrow = TRUE) m ## [,1] [,2] [,3] [,4] ## [1,] 21.0 21.0 22.8 21.4 ## [2,] 18.7 18.1 14.3 24.4 ## [3,] 22.8 19.2 17.8 16.4 ## [4,] 17.3 15.2 10.4 10.4 ## [5,] 14.7 32.4 30.4 33.9 ## [6,] 21.5 15.5 15.2 13.3 ## [7,] 19.2 27.3 26.0 30.4 ## [8,] 15.8 19.7 15.0 21.4 Matriks m adalah matriks berukuran 8x4. Argumen byrow = TRUE artinya matriks akan setiap elemen x diisikan ke m memenuhi baris terlebih dahulu. Jika byrow = FALSE maka setiap elemen x diisikan ke m memenuhi kolom terlebih dahulu. Untuk membuat matriks dengan nilai yang sama seluruhnya, maka dapat dilakukan seperti berikut. matrix(data = 0, nrow = 5, ncol = 6) ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 0 0 0 0 0 0 ## [2,] 0 0 0 0 0 0 ## [3,] 0 0 0 0 0 0 ## [4,] 0 0 0 0 0 0 ## [5,] 0 0 0 0 0 0 Untuk mengakses elemen dari suatu matriks, Anda dapat menggunakan indeks dari baris atau kolomnya. # Mengambil elemen matriks `m` di baris 4 m[4, ] ## [1] 17.3 15.2 10.4 10.4 # Mengambil elemen matriks `m` di kolom 3 m[, 3] ## [1] 22.8 14.3 17.8 10.4 30.4 15.2 26.0 15.0 # Mengambil elemen matriks `m` di baris 4 dan kolom 3 m[4, 3] ## [1] 10.4 # Mengambil elemen matriks `m` di baris 4 dan 6, dan kolom 3 m[c(4, 6), 3] ## [1] 10.4 15.2 R menyediakan sebuah fungsi yaitu diag() untuk mengakses nilai-nilai pada diagonal utama sebuah matriks. diag(m) ## [1] 21.0 18.1 17.8 10.4 Anda juga dapat mengganti nilai dari elemen suatu matriks dengan menggunakan operator assignment. m[4, 3] &lt;- 0 m[4, 3] ## [1] 0 m # perhatikan elemen di baris 4 kolom 3 sudah berubah jadi 0.0 ## [,1] [,2] [,3] [,4] ## [1,] 21.0 21.0 22.8 21.4 ## [2,] 18.7 18.1 14.3 24.4 ## [3,] 22.8 19.2 17.8 16.4 ## [4,] 17.3 15.2 0.0 10.4 ## [5,] 14.7 32.4 30.4 33.9 ## [6,] 21.5 15.5 15.2 13.3 ## [7,] 19.2 27.3 26.0 30.4 ## [8,] 15.8 19.7 15.0 21.4 3.5 Array Array merupakan matriks dengan dimensi lebih banyak. Jika matriks hanya mempunyai 2 dimensi, maka array dapat memiliki dimensi lebih dari 2. Figure 3.1: Ilustrasi Array 3 dimensi array(mtcars$mpg, dim = c(4, 4, 2)) ## , , 1 ## ## [,1] [,2] [,3] [,4] ## [1,] 21.0 18.7 22.8 17.3 ## [2,] 21.0 18.1 19.2 15.2 ## [3,] 22.8 14.3 17.8 10.4 ## [4,] 21.4 24.4 16.4 10.4 ## ## , , 2 ## ## [,1] [,2] [,3] [,4] ## [1,] 14.7 21.5 19.2 15.8 ## [2,] 32.4 15.5 27.3 19.7 ## [3,] 30.4 15.2 26.0 15.0 ## [4,] 33.9 13.3 30.4 21.4 Salah satu array yang ada setelah Anda install R adalah array Titanic. Titanic ## , , Age = Child, Survived = No ## ## Sex ## Class Male Female ## 1st 0 0 ## 2nd 0 0 ## 3rd 35 17 ## Crew 0 0 ## ## , , Age = Adult, Survived = No ## ## Sex ## Class Male Female ## 1st 118 4 ## 2nd 154 13 ## 3rd 387 89 ## Crew 670 3 ## ## , , Age = Child, Survived = Yes ## ## Sex ## Class Male Female ## 1st 5 1 ## 2nd 11 13 ## 3rd 13 14 ## Crew 0 0 ## ## , , Age = Adult, Survived = Yes ## ## Sex ## Class Male Female ## 1st 57 140 ## 2nd 14 80 ## 3rd 75 76 ## Crew 192 20 3.6 Data.frame Data.frame layaknya sebuah tabel di Ms Excel, terdiri dari baris dan kolom dengan nama masing-masing kolom berbeda. Apa bedanya dengan matriks? Matriks hanya bisa menyimpan tipe data yang sama, numeric atau character seluruhnya. Pada data.frame, masing-masing kolom boleh memiliki tipe data yang berbeda. 3.7 List 3.8 Function dan Packages Membahas cara menggunakan fungsi yang sudah ada di R, membuat fungsi sendiri dan cara menggunakan package. 3.9 Latihan Buatlah sebuah vector dengan nama x1 yang merupakan gabungan dari kolom drat dan wt dari data.frame mtcars. "]
]
